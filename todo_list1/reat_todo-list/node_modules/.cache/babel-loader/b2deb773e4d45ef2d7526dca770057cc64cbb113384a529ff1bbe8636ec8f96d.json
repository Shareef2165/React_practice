{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react\\\\todi_list\\\\reat_todo-list\\\\src\\\\components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const handleAddTask = () => {\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, {\n        id: Date.now(),\n        title: newTask,\n        completed: false\n      }]);\n      setNewTask('');\n    }\n  };\n  const handleToggleComplete = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleEditTask = (id, newTitle) => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      title: newTitle\n    } : task));\n  };\n  const handleDeleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => handleToggleComplete(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTask(task.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","id","Date","now","title","completed","handleToggleComplete","map","task","handleEditTask","newTitle","handleDeleteTask","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react/todi_list/reat_todo-list/src/components/Todo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TodoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim() !== '') {\r\n      setTasks([...tasks, { id: Date.now(), title: newTask, completed: false }]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const handleToggleComplete = (id) => {\r\n    setTasks(tasks.map((task) => (task.id === id ? { ...task, completed: !task.completed } : task)));\r\n  };\r\n\r\n  const handleEditTask = (id, newTitle) => {\r\n    setTasks(tasks.map((task) => (task.id === id ? { ...task, title: newTitle } : task)));\r\n  };\r\n\r\n  const handleDeleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <input type=\"text\" value={newTask} onChange={(e) => setNewTask(e.target.value)} />\r\n      <button onClick={handleAddTask}>Add Task</button>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <input type=\"checkbox\" checked={task.completed} onChange={() => handleToggleComplete(task.id)} />\r\n            <span>{task.title}</span>\r\n            <button onClick={() => handleEditTask(task.id)}>Edit</button>\r\n            <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}